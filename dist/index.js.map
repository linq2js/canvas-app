{"version":3,"sources":["../index.js"],"names":["component","element","createApp","imageCache","fabric","window","animate","util","animateColor","eventHash","onClick","onDblClick","eventNames","altEventNames","onObjectMoved","onObjectMoving","onObjectScaling","onObjectRotating","onObjectSkewing","onObjectScaled","onObjectRotated","onObjectSkewed","onMouseUp","onMouseDblclick","split","forEach","x","normalizeName","replace","name","shouldCreate","child","key","type","props","__type","__key","shouldUpdate","hasChange","v","k","__props","updateObject","obj","setter","render","comp","parent","app","getView","state","list","collect","blockProps","Function","Array","children","push","canvas","allObjects","getObjects","__shouldRemove","index","ref","selectable","selection","Object","assign","controls","hoverCursor","typeName","constr","Error","hasKey","undefined","find","item","objEvents","objProps","calcCoords","update","set","newObj","text","src","insertAt","__childAdded","remove","setCoords","objectsToRemove","filter","length","stateToProps","view","arguments","lastProps","lastResult","componentType","newProps","__id","initialState","animations","arg","value","subscribers","unsubcribed","freeze","debounce","allCanvas","document","getElementById","toDataURL","configName","configs","fabricCanvas","Canvas","__configs","debounceRenderAll","renderAll","$state","$anim","change","complete","duration","easing","options","stop","running","from","token","to","startValue","endValue","byValue","by","onChange","currentValue","onComplete","$animColor","colorEasing","$load","image","loadImage","left","top","width","height","cacheKey","load","Promise","Image","fromURL","payload","i","_element","success","resolve","crossOrigin","then","createElement","ctx","getContext","availWidth","Math","min","availHeight","drawImage","currentConfigs","newState","calcOffset","objects","activeObjects","getActiveObjects","discardActiveObjects","indexOf","on","e","target","altEventName"],"mappings":"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","file":"index.js","sourcesContent":["import \"fabric\";\r\nimport {\r\n    capitalize,\r\n    uniqueId,\r\n    debounce,\r\n    isEqual,\r\n    each,\r\n    startCase,\r\n    set,\r\n    get\r\n} from \"lodash\";\r\n\r\nconst imageCache = {};\r\nconst fabric = window.fabric;\r\nexport const animate = fabric.util.animate;\r\nexport const animateColor = fabric.util.animateColor;\r\nconst eventHash = {\r\n    onClick: true,\r\n    onDblClick: true\r\n};\r\nconst eventNames = {};\r\nconst altEventNames = {\r\n    onObjectMoved: \"onMoved\",\r\n    onObjectMoving: \"onMoving\",\r\n    onObjectScaling: \"onScaling\",\r\n    onObjectRotating: \"onRotating\",\r\n    onObjectSkewing: \"onSkewing\",\r\n    onObjectScaled: \"onScaled\",\r\n    onObjectRotated: \"onRotated\",\r\n    onObjectSkewed: \"onSkewed\",\r\n    onMouseUp: \"onClick\",\r\n    onMouseDblclick: \"onDblClick\"\r\n};\r\n`\r\nobject:modified\r\nobject:moving\r\nobject:scaling\r\nobject:rotating\r\nobject:skewing\r\nobject:moved\r\nobject:scaled\r\nobject:rotated\r\nobject:skewed\r\nbefore:transform\r\nbefore:selection:cleared\r\nselection:cleared\r\nselection:created\r\nselection:updated\r\nmouse:up\r\nmouse:down\r\nmouse:move\r\nmouse:up:before\r\nmouse:down:before\r\nmouse:move:before\r\nmouse:dblclick\r\nmouse:wheel\r\nmouse:over\r\nmouse:out\r\ndrop\r\ndragover\r\ndragenter\r\ndragleave`\r\n    .split(/\\s+/)\r\n    .forEach(x => {\r\n        eventNames[x] = \"on\" + normalizeName(x.replace(/:/g, \"-\"));\r\n        eventHash[eventNames[x]] = true;\r\n    });\r\n\r\nfunction normalizeName(name) {\r\n    return startCase(name).replace(/\\s+/g, \"\");\r\n}\r\n\r\nfunction shouldCreate(child, key, type, props) {\r\n    return !child || child.__type !== type || child.__key !== key;\r\n}\r\n\r\nfunction shouldUpdate(child, key, type, props) {\r\n    let hasChange = false;\r\n    each(props, (v, k) => {\r\n        if (!isEqual(v, child.__props[k])) {\r\n            hasChange = true;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return hasChange;\r\n}\r\n\r\nfunction updateObject(obj, props) {\r\n    each(props, (v, k) => {\r\n        const setter = \"set\" + capitalize(k);\r\n        if (setter in obj) {\r\n            obj[setter](v);\r\n        } else {\r\n            obj[k] = v;\r\n        }\r\n    });\r\n}\r\n\r\nfunction render(comp, parent, app, getView) {\r\n    const state = app();\r\n\r\n    const list = [];\r\n\r\n    function collect(comp, blockProps) {\r\n        if (comp instanceof Function) {\r\n            comp = comp(state);\r\n        }\r\n\r\n        if (!comp) return;\r\n\r\n        if (comp instanceof Array) {\r\n            comp.forEach(x => collect(x, blockProps));\r\n            return;\r\n        }\r\n\r\n        if (comp.type instanceof Function) {\r\n            collect(comp.type(comp.props, ...(comp.children || [])));\r\n            return;\r\n        }\r\n\r\n        if (comp.type === \"block\") {\r\n            collect(comp.children, comp.props);\r\n            return;\r\n        }\r\n\r\n        const { type, props, children } = comp;\r\n\r\n        list.push({\r\n            type,\r\n            props: {\r\n                ...blockProps,\r\n                ...props\r\n            },\r\n            children\r\n        });\r\n    }\r\n\r\n    collect(comp);\r\n\r\n    const canvas = parent.canvas || parent;\r\n\r\n    const allObjects = parent.getObjects();\r\n\r\n    allObjects.forEach(x => (x.__shouldRemove = true));\r\n\r\n    list.forEach((comp, index) => {\r\n        let { type, props: { key, ref, ...props } = {} } = comp;\r\n\r\n        const selectable =\r\n            props.selectable === false ? false : props.selectable || canvas.selection;\r\n        props = Object.assign(\r\n            {\r\n                selectable: !!selectable,\r\n                controls: !!selectable,\r\n                hoverCursor: selectable ? \"move\" : \"default\"\r\n            },\r\n            props\r\n        );\r\n\r\n        const typeName = normalizeName(type);\r\n\r\n        const constr = fabric[typeName];\r\n        if (!constr) {\r\n            throw new Error(`Element type ${typeName} is not supported`);\r\n        }\r\n\r\n        let obj, hasKey;\r\n\r\n        if (key !== null && key !== undefined) {\r\n            hasKey = true;\r\n            obj = parent.getObjects().find(x => x.__key === key);\r\n        } else {\r\n            obj = parent.item(index);\r\n        }\r\n\r\n        const objEvents = {};\r\n        const objProps = {};\r\n        let calcCoords = false;\r\n\r\n        each(props, (v, k) => {\r\n            if (k in eventHash) {\r\n                objEvents[k] = v;\r\n            } else {\r\n                if (k === \"left\" || k === \"top\" || k === \"width\" || k === \"height\") {\r\n                    calcCoords = true;\r\n                }\r\n\r\n                objProps[k] = v;\r\n            }\r\n        });\r\n\r\n        function update() {\r\n            if (obj.set) {\r\n                obj.set(objProps);\r\n            } else {\r\n                Object.assign(obj, objProps);\r\n            }\r\n            Object.assign(obj, objEvents);\r\n        }\r\n\r\n        if (!hasKey) {\r\n            key = index;\r\n        }\r\n\r\n        if (shouldCreate(obj, key, type, props)) {\r\n            const newObj = Object.assign(\r\n                new constr(\r\n                    type === \"group\"\r\n                        ? []\r\n                        : type === \"text\"\r\n                        ? objProps.text\r\n                        : type === \"image\" ? objProps.src : objProps\r\n                ),\r\n                {\r\n                    __key: key,\r\n                    __props: props,\r\n                    __type: type\r\n                }\r\n            );\r\n\r\n            parent.insertAt(newObj, index);\r\n\r\n            if (parent.__type === \"group\") {\r\n                parent.__childAdded = true;\r\n            }\r\n\r\n            if (obj) {\r\n                parent.remove(obj);\r\n            }\r\n\r\n            obj = newObj;\r\n\r\n            update();\r\n\r\n            calcCoords = true;\r\n        } else if (shouldUpdate(obj, key, type, props)) {\r\n            update();\r\n        }\r\n\r\n        delete obj.__shouldRemove;\r\n\r\n        if (calcCoords) {\r\n            obj.setCoords();\r\n        }\r\n\r\n        if (ref) {\r\n            ref(obj);\r\n        }\r\n    });\r\n\r\n    const objectsToRemove = allObjects.filter(x => x.__shouldRemove);\r\n    if (objectsToRemove.length) {\r\n        parent.remove(...objectsToRemove);\r\n    }\r\n}\r\n\r\nexport function component(stateToProps, view) {\r\n    if (arguments.length === 1) {\r\n        view = stateToProps;\r\n        stateToProps = (state, props) => props;\r\n    }\r\n    let lastProps, lastResult;\r\n\r\n    const componentType = function(props) {\r\n        return function(state) {\r\n            const newProps = stateToProps(state, props);\r\n            if (isEqual(newProps, lastProps)) {\r\n                return lastResult;\r\n            }\r\n            lastProps = newProps;\r\n            return (lastResult = view(newProps));\r\n        };\r\n    };\r\n\r\n    componentType.__id = uniqueId(\"c_\");\r\n\r\n    return componentType;\r\n}\r\n\r\n/**\r\n * create vdom\r\n */\r\nexport function element(type, props, ...children) {\r\n    return {\r\n        type,\r\n        props: props || {},\r\n        children\r\n    };\r\n}\r\n\r\n/**\r\n * create app\r\n */\r\nexport function createApp(view, canvas, initialState) {\r\n    const animations = {};\r\n    const app = function(arg = true, value) {\r\n        // app() => get app state\r\n        if (!arguments.length) return state;\r\n\r\n        // app(subscriber) => subscribe app state change\r\n        if (arg instanceof Function) {\r\n            subscribers.push(arg);\r\n            let unsubcribed = false;\r\n            return function() {\r\n                if (unsubcribed) return;\r\n                unsubcribed = true;\r\n                subscribers = subscribers.filter(x => x !== arg);\r\n            };\r\n        }\r\n\r\n        // app(state)\r\n        if (!arg) {\r\n            return;\r\n        }\r\n\r\n        if (typeof arg === \"string\") {\r\n            state = { ...state };\r\n            set(state, arg, value);\r\n            state = Object.freeze(state);\r\n        } else {\r\n            state = Object.freeze({\r\n                ...state,\r\n                ...arg\r\n            });\r\n        }\r\n\r\n        subscribers.forEach(x => x(state));\r\n    };\r\n\r\n    app.debounce = debounce((...args) => app(...args), 10);\r\n\r\n    let allCanvas;\r\n    if (typeof canvas === \"string\") {\r\n        allCanvas = {\r\n            \"\": document.getElementById(canvas)\r\n        };\r\n    } else if (canvas.toDataURL) {\r\n        allCanvas = {\r\n            \"\": canvas\r\n        };\r\n    } else {\r\n        allCanvas = {};\r\n        each(canvas, (v, k) => {\r\n            allCanvas[k] = typeof v === \"string\" ? document.getElementById(v) : v;\r\n        });\r\n    }\r\n\r\n    each(allCanvas, (canvas, configName) => {\r\n        const configs = configName\r\n            ? initialState.configs[configName]\r\n            : initialState.configs;\r\n        const fabricCanvas = new fabric.Canvas(canvas, configs);\r\n        allCanvas[configName] = fabricCanvas;\r\n        fabricCanvas.__configs = configs;\r\n        fabricCanvas.debounceRenderAll = debounce(\r\n            () => fabricCanvas.renderAll(),\r\n            0\r\n        );\r\n    });\r\n\r\n    let state = Object.freeze({\r\n            $state: app,\r\n            $anim(\r\n                name,\r\n                { change, complete, duration, easing, ...options } = {},\r\n                stop\r\n            ) {\r\n                if (arguments.length === 1)\r\n                    return animations[name] || { running: false };\r\n                if (!(\"from\" in options)) {\r\n                    options.from = get(app(), name);\r\n                }\r\n\r\n                const token = (animations[name] = {\r\n                    from: options.from,\r\n                    to: options.to,\r\n                    running: false\r\n                });\r\n\r\n                if (stop) {\r\n                    return;\r\n                }\r\n\r\n                animate({\r\n                    startValue: options.from,\r\n                    endValue: options.to,\r\n                    byValue: options.by,\r\n                    duration,\r\n                    easing,\r\n                    onChange(currentValue) {\r\n                        token.running = true;\r\n                        if (animations[name] !== token) return;\r\n                        app.debounce(name, currentValue);\r\n                        if (change) {\r\n                            change(currentValue);\r\n                        }\r\n                    },\r\n                    onComplete() {\r\n                        token.complete = true;\r\n                        token.running = false;\r\n                        if (complete) {\r\n                            complete();\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            $animColor(\r\n                name,\r\n                { change, complete, duration, easing, ...options } = {},\r\n                stop\r\n            ) {\r\n                if (!(\"from\" in options)) {\r\n                    options.from = get(app(), name);\r\n                }\r\n                const token = (animations[name] = {\r\n                    from: options.from,\r\n                    to: options.to,\r\n                    running: false\r\n                });\r\n\r\n                if (stop) {\r\n                    return;\r\n                }\r\n\r\n                animateColor(options.from, options.to, duration, {\r\n                    colorEasing: easing,\r\n                    onChange(currentValue) {\r\n                        token.running = true;\r\n                        if (animations[name] !== token) return;\r\n                        app.debounce(name, currentValue);\r\n                        if (change) {\r\n                            change(currentValue);\r\n                        }\r\n                    },\r\n                    onComplete() {\r\n                        token.complete = true;\r\n                        token.running = false;\r\n                        if (complete) {\r\n                            complete();\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            $load: {\r\n                image: function loadImage(\r\n                    src,\r\n                    left = 0,\r\n                    top = 0,\r\n                    width = 0,\r\n                    height = 0\r\n                ) {\r\n                    const cacheKey = `${src}-${left}-${top}-${width}-${height}`;\r\n                    if (cacheKey in imageCache) {\r\n                        return imageCache[cacheKey];\r\n                    }\r\n\r\n                    function load(src) {\r\n                        return new Promise(resolve => {\r\n                            fabric.Image.fromURL(\r\n                                src,\r\n                                i => {\r\n                                    Object.assign(imageCache[cacheKey], {\r\n                                        payload: i._element,\r\n                                        success: true\r\n                                    });\r\n\r\n                                    resolve(i);\r\n\r\n                                    app({});\r\n                                },\r\n                                {\r\n                                    crossOrigin: \"anonymous\"\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n\r\n                    if (width && height) {\r\n                        return (imageCache[cacheKey] = loadImage(src).then(image => {\r\n                            const canvas = document.createElement(\"CANVAS\");\r\n                            const ctx = canvas.getContext(\"2d\");\r\n                            // cannot load\r\n                            if (!image._element) return;\r\n                            const availWidth = Math.min(width, image.width - left);\r\n                            const availHeight = Math.min(height, image.height - top);\r\n                            ctx.drawImage(\r\n                                image._element,\r\n                                left,\r\n                                top,\r\n                                availWidth,\r\n                                availHeight,\r\n                                0,\r\n                                0,\r\n                                availWidth,\r\n                                availHeight\r\n                            );\r\n\r\n                            return load(canvas.toDataURL(\"image/png\"));\r\n                        }));\r\n                    }\r\n\r\n                    return (imageCache[cacheKey] = load(src));\r\n                }\r\n            },\r\n            ...initialState\r\n        }),\r\n        subscribers = [\r\n            newState => {\r\n                each(allCanvas, (fabricCanvas, configName) => {\r\n                    const currentConfigs = configName\r\n                        ? newState.configs[configName]\r\n                        : newState.configs;\r\n\r\n                    if (!isEqual(currentConfigs, fabricCanvas.__configs)) {\r\n                        updateObject((fabricCanvas.__configs = currentConfigs));\r\n                        fabricCanvas.calcOffset();\r\n                    }\r\n\r\n                    const objects = fabricCanvas.getObjects();\r\n                    const activeObjects = fabricCanvas.getActiveObjects();\r\n                    let discardActiveObjects;\r\n                    objects.forEach(x => (x.__shouldRemove = true));\r\n                    render(configName ? view[configName] : view, fabricCanvas, app);\r\n                    const objectsToRemove = objects.filter(x => {\r\n                        if (x.__shouldRemove) {\r\n                            if (activeObjects.indexOf(x) !== -1) {\r\n                                discardActiveObjects = true;\r\n                            }\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    if (objectsToRemove.length) {\r\n                        fabricCanvas.remove(...objectsToRemove);\r\n                    }\r\n                    if (discardActiveObjects) {\r\n                        fabricCanvas.discardActiveObjects();\r\n                    }\r\n                    fabricCanvas.debounceRenderAll();\r\n                });\r\n            }\r\n        ];\r\n\r\n    // observe events\r\n    each(eventNames, (v, k) => {\r\n        each(allCanvas, fabricCanvas => {\r\n            fabricCanvas.on(k, e => {\r\n                if (e.target) {\r\n                    if (e.target[v]) {\r\n                        e.target[v](e);\r\n                    } else {\r\n                        const altEventName = altEventNames[v];\r\n                        if (altEventName && e.target[altEventName]) {\r\n                            e.target[altEventName](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    app(true);\r\n\r\n    return app;\r\n}"]}